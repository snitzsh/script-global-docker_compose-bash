---
# Source: docker-compose/templates/main.yaml
version: "3.8"
services:
  cache-db-uis-snitzsh-redisinsight:
    container_name: cache-db-uis-snitzsh-redisinsight
    hostname: cache-db-uis-snitzsh-redisinsight
    image: "redislabs/redisinsight:latest"
    restart: always
    environment: {}
    volumes:
      - "./volumes/cache-db-uis-snitzsh-redisinsight:/db"
    labels:
    - com.docker.compose.app-name=snitzsh
    - com.docker.compose.software-type=public
    - com.docker.compose.component-type=cache-db-uis
    - com.docker.compose.service-name=cache-db-uis-snitzsh-redisinsight
    - com.docker.compose.platform=linux/arm64
    ports:
      - 5540:5540  
    networks:
    - cache-dbs-snitzsh-redis  
    depends_on:
    - cache-dbs-snitzsh-redis
  cache-dbs-snitzsh-redis:
    container_name: cache-dbs-snitzsh-redis
    hostname: cache-dbs-snitzsh-redis
    image: "redis:latest"
    restart: always
    environment:
      REDIS_USERNAME: root
    volumes:
      - "./volumes/cache-dbs-snitzsh-redis/data:/data"
    labels:
    - com.docker.compose.app-name=snitzsh
    - com.docker.compose.software-type=public
    - com.docker.compose.component-type=cache-dbs
    - com.docker.compose.service-name=cache-dbs-snitzsh-redis
    - com.docker.compose.platform=linux/arm64
    expose:
      - "6379"
    ports:
      - "6379:6379"
    command: "redis-server --save 20 1 --loglevel warning --requirepass root"  
    networks:
    - cache-dbs-snitzsh-redis
  db-uis-snitzsh-pgadmin4:
    container_name: db-uis-snitzsh-pgadmin4
    hostname: db-uis-snitzsh-pgadmin4
    image: "dpage/pgadmin4:latest"
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@snitzsh.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - "./volumes/db-uis-snitzsh-pgadmin4:/var/lib/pgadmin"
    labels:
    - com.docker.compose.app-name=snitzsh
    - com.docker.compose.software-type=public
    - com.docker.compose.component-type=db-uis
    - com.docker.compose.service-name=db-uis-snitzsh-pgadmin4
    - com.docker.compose.platform=linux/arm64
    expose:
      - '80'
    ports:
      - '5050:80'  
    networks:
    - dbs-snitzsh-postgres  
    depends_on:
    - dbs-snitzsh-postgres
  dbs-snitzsh-postgres:
    container_name: dbs-snitzsh-postgres
    hostname: dbs-snitzsh-postgres
    image: "postgres:latest"
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: snitzsh_db
    volumes:
      - "./volumes/dbs-snitzsh-postgres/data:/var/lib/postgresql/data"
      - "./volumes/dbs-snitzsh-postgres/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"
    labels:
    - com.docker.compose.app-name=snitzsh
    - com.docker.compose.software-type=public
    - com.docker.compose.component-type=dbs
    - com.docker.compose.service-name=dbs-snitzsh-postgres
    - com.docker.compose.platform=linux/arm64
    expose:
      - "5432"
    ports:
      - "5432:5432"  
    networks:
    - dbs-snitzsh-postgres
volumes:
  cache-db-uis-snitzsh-redisinsight:
    driver: local
  cache-dbs-snitzsh-redis:
    driver: local
  db-uis-snitzsh-pgadmin4:
    driver: local
  dbs-snitzsh-postgres:
    driver: local
networks:
  cache-dbs-%!s(<nil>)-redis:
    driver: bridge
  dbs-%!s(<nil>)-postgres:
    driver: bridge
