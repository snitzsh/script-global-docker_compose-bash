---
# Source: docker-compose/templates/main.yaml
version: "3.8"
services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB="snitch_db"
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@snitch.com
      - PGADMIN_DEFAULT_PASSWORD=root
    expose:
      - '80'
    ports:
      - '5050:80'
    volumes:
      - ./pgadmin4:/var/lib/pgadmin
    links:
      - postgres
    depends_on:
      - postgres
  redis:
    container_name: redis
    image: redis
    restart: always
    expose:
      - "6379"
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass root
    volumes:
      - ./redis/data:/data
      # - ./redis/config:/user/local/etc/redis
  redisinsight:
    image: redislabs/redisinsight:latest
    expose:
      - "8001"
    ports:
      - '8001:8001'
    volumes:
      - ./redisinsight:/db
    links:
      - redis
    depends_on:
      - redis
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - 9000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  apis:
    # build:
    #   context: . # Directory of where the docker file is.
    #   dockerfile: Dockerfile # name of the docker file
    #   target: base # look at the Dockerfile for `as local`, that way we can configure dev | qa | prod differently if needed
    container_name: apis-rust
    image: apis-rust:latest
    restart: always
    volumes:
      - ../apis-rust/src:/usr/src/apis-rust
    expose:
      - '3000'
    ports:
      - '3000:3000'
    command: api-rust
    environment:
      NODE_ENV: 'local' # local | dev | qa | prod
      POSTGRES_DB_HOST: postgres
      POSTGRES_DB_PORT: 5432
      POSTGRES_DB_USER: root
      POSTGRES_DB_PASSWORD: root
      POSTGRES_DB_NAME: snitch_db
      REDIS_DB_HOST: cache
      REDIS_DB_PORT: 6379
      REDIS_DB_PASSWORD: root
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
  website_vue:
    container_name: website-vue
    image: website-vue:latest
    restart: always
    # stdin_open: true
    # tty: true
    # environment:
      # - HOST=0.0.0.0:3000
      # - CHOKIDAR_USEPOLLING=true
    volumes:
      # - ../website-vue/:/app
      - ../website-vue/src:/app/src
      - ../website-vue/package.json:/app/package.json
    expose:
      - "8080"
    ports:
      - "8080:8080"
    # -- --public 0.0.0.0:8080
    command: npm run serve
volumes:
  postgres:
    driver: local
  redis:
    driver: local
  redisinsight:
    driver: local
  grafana:
    driver: local
