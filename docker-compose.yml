---
# Source: docker-compose/templates/main.yaml
version: "3.8"
services:
  postgres:
    container_name: postgres
    image: postgres:14.5-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  pgadmin4:
    container_name: postgres-ui
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=secret
    expose:
      - '80'
    ports:
      - '3001:80'
    links:
      - postgres
    depends_on:
      - postgres
  redis:
    container_name: redis
    image: redis:7.0.4-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
  apis:
    # build:
    #   context: . # Directory of where the docker file is.
    #   dockerfile: Dockerfile # name of the docker file
    #   target: base # look at the Dockerfile for `as local`, that way we can configure dev | qa | prod differently if needed
    container_name: apis-fastify
    image: apis-fastify:latest
    restart: always
    volumes:
      - ../apis-fastify/src:/app/src
      - ../apis-fastify/nodemon.json:/app/nodemon.json
      - ../apis-fastify/server.js:/app/server.js
    expose:
      - '3000'
    ports:
      - '3000:3000'
    command: npm run local
    environment:
      NODE_ENV: 'local' # local | dev | qa | prod
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
  website_vue:
    container_name: website-vue
    image: website-vue:latest
    restart: always
    stdin_open: true
    tty: true
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # - ../website-vue/:/app
      - ../website-vue/src:/app/src
      - ../website-vue/package.json:/app/package.json
    expose:
      - "8080"
    ports:
      - "8080:8080"
    # -- --public 0.0.0.0:8080
    command: npm run serve
volumes:
  postgres:
    driver: local
  redis:
    driver: local
