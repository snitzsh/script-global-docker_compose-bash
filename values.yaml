# Default values for docker-compose.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#
# TODO:
# - Make sure you throw an error if other component is unsing the same port
# - use docker secret volume to pass the password.
# - findout why can't I use `-` , right now I am using `_` as .components[].this_key
#

apps:
  - snitzsh

platform:
  architecture: arm64 # linux: amd64 | mac m*: arm64

env:
  cluster_name: dev
  cluster_type: local

apis-snitzsh-main-rust:
  path: "../../../"
  _workdir: /app
  docker_target: "dev-stage"
  # TODO:
  #  - findout if .cargo/config.toml is equivalent to package.json in node
  #    maybe for rust is not neccesary.
  target_script: "dev"
  host: "0.0.0.0"
  port: "3000" # this will be dynamic handled by helm

uis-snitzsh-main-vue:
  path: "../../../"
  _workdir: /app
  docker_target: "dev-stage"
  target_script: "dev" # .scripts{} in package.json
  host: "0.0.0.0"
  port: "8080" # this will be dynamic handled by helm

components:
  public:
    grafana: true
    pgadmin4: false
    postgres: true
    redis: false
    redisinsight: false
  private:
    apis:
      main-fastify: false # If microservice it will use `apis` property
      main-rust: true
    uis:
      main-vue: false

docker:
  volumes: true
  networks: true

# TODO:
# - do we need this???
# All Microservice API will be dynamically place here... if empty it will
# do `monolithic` build
front-end:
  customer-facing: true
  admin-portal: true

#
# IMPORTANT:
#   - when changing the auth, make sure to do `docker system prune --all --force`
#     otherwise it will cache the old auth or other configs. Remove volumes/
#
# NOTE:
#   - Mainly for `local` development: redis, redisinsight, postgres, pgadmin4
auth:
  email: 'root@snitzsh.com'
  username: 'root'
  password: 'root'
